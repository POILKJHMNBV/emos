<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.emos.db.dao.TbMeetingMapper">

    <resultMap id="BaseResultMap" type="com.example.emos.db.pojo.TbMeeting">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="uuid" column="uuid" jdbcType="VARCHAR"/>
            <result property="title" column="title" jdbcType="VARCHAR"/>
            <result property="creatorId" column="creator_id" jdbcType="BIGINT"/>
            <result property="date" column="date" jdbcType="DATE"/>
            <result property="place" column="place" jdbcType="VARCHAR"/>
            <result property="start" column="start" jdbcType="TIME"/>
            <result property="end" column="end" jdbcType="TIME"/>
            <result property="type" column="type" jdbcType="SMALLINT"/>
            <result property="members" column="members" jdbcType="OTHER"/>
            <result property="desc" column="desc" jdbcType="VARCHAR"/>
            <result property="instanceId" column="instance_id" jdbcType="VARCHAR"/>
            <result property="present" column="present" jdbcType="OTHER"/>
            <result property="unpresent" column="unpresent" jdbcType="OTHER"/>
            <result property="status" column="status" jdbcType="SMALLINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,uuid,title,
        creator_id,date,place,
        start,end,type,
        members,desc,instance_id,
        present,unpresent,status,
        create_time
    </sql>

    <select id="searchOfflineMeetingByPage" parameterType="hashmap" resultType="hashmap">
        SELECT
            mr.name,
            tmp.meeting
        FROM tb_meeting_room mr LEFT JOIN
            (SELECT
            place,
            CONCAT(
                '[',
                    GROUP_CONCAT(
                    JSON_OBJECT('start', DATE_FORMAT(start, '%H:%i'),
                    'end', DATE_FORMAT(end, '%H:%i'),
                    'status', `status`,
                    'time', ROUND(TIMESTAMPDIFF(MINUTE, start, end) / 30))
                    ),
                 ']')AS meeting
            FROM tb_meeting
            WHERE
                type = 2 AND
                `status` != 2 AND
                date = #{date}
                <if test="mold == '我的会议'">
                    AND JSON_CONTAINS(members, CAST(#{userId} AS CHAR))
                </if>
                GROUP BY place) AS tmp
        ON mr.name = tmp.place
        WHERE mr.status = 1
        <if test="name != null">
            AND mr.name = #{name}
        </if>
        LIMIT #{start}, #{length}
    </select>
    <select id="searchOfflineMeetingByPageCount" parameterType="hashmap" resultType="long">
        SELECT COUNT(*) FROM tb_meeting_room WHERE `status` = 1
    </select>
    <select id="searchOnlineMeetingByPage" parameterType="hashmap" resultType="hashmap">
        SELECT m.id,
               m.title,
               u.name AS creatorName,
               IF(creator_id = #{userId}, true, false) AS isCreator,
               IF(JSON_CONTAINS(m.members, CAST(#{userId} AS CHAR)) = 1, true, false) AS mine,
               m.date,
               DATE_FORMAT(m.start, '%H:%i') AS start,
               DATE_FORMAT(m.end, '%H:%i') AS end,
               JSON_LENGTH(m.members) AS num,
               m.status,
               m.`desc`,
               m.uuid,
               m.instance_id AS instanceId
        FROM tb_meeting m JOIN tb_user u ON m.creator_id = u.id
        WHERE m.type = 1 AND m.status != 2
        <if test="date != null">
            AND m.date = #{date}
        </if>
        <if test="mold == '我的会议'">
            AND JSON_CONTAINS(m.members, CAST(#{userId} AS CHAR))
        </if>
        ORDER BY m.id DESC
        LIMIT #{start}, #{length}
    </select>
    <select id="searchOnlineMeetingByPageCount" parameterType="hashmap" resultType="long">
        SELECT COUNT(*)
        FROM tb_meeting m JOIN tb_user u ON m.creator_id = u.id
        WHERE m.type = 1 AND m.status != 2
        <if test="date != null">
            AND m.date = #{date}
        </if>
        <if test="mold == '我的会议'">
            AND JSON_CONTAINS(m.members, CAST(#{userId} AS CHAR))
        </if>
    </select>
    <select id="searchMeetingMembersInSameDept" parameterType="string" resultType="boolean">
        SELECT IF(COUNT(DISTINCT u.dept_id) = 1, TRUE, FALSE)
        FROM tb_meeting m JOIN tb_user u ON JSON_CONTAINS(m.members, CAST(u.id AS CHAR))
        WHERE m.uuid = #{uuid} AND u.status = 1
    </select>
    <select id="searchOfflineMeetingInWeek" parameterType="java.util.Map" resultType="hashmap">
        SELECT
            id,
            title,
            DATE_FORMAT(`date`, '%m/%d') AS `date`,
            DATE_FORMAT(start, '%H:%i') AS `start`,
            ROUND(TIMESTAMPDIFF(MINUTE, CONCAT(`date`, ' ', `start`), CONCAT(`date`, ' ', `end`)) / 20) AS time,
            uuid,
            instance_id AS instanceId,
            IF(creator_id = #{userId}, true, false) AS isCreator,
            `status`
        FROM tb_meeting
        WHERE type = 2
          AND place = #{place}
          AND `status` != 2
          AND `date` BETWEEN #{startDate} AND #{endDate}
        <if test="mold=='我的会议'">
            AND JSON_CONTAINS(members, CAST(#{userId} AS CHAR))
        </if>
    </select>
    <select id="searchMeetingInfo" parameterType="long" resultType="hashmap">
        SELECT m.title,
               m.date,
               m.place,
               DATE_FORMAT(m.`start`, '%H:%i') AS `start`,
               DATE_FORMAT(m.`end`, '%H:%i') AS `end`,
               m.status,
               CONCAT('[', GROUP_CONCAT(JSON_OBJECT('name', u.name, 'photo', u.photo)), ']') AS members
        FROM tb_meeting m LEFT JOIN tb_user u ON JSON_CONTAINS(m.members, CAST(u.id AS CHAR))
        WHERE m.id = #{id} AND u.status = 1
    </select>
    <select id="searchCurrentMeetingInfo" parameterType="long" resultType="hashmap">
        SELECT m.title,
               m.date,
               m.place,
               DATE_FORMAT(m.`start`,'%H:%i') AS `start`,
               DATE_FORMAT(m.`end`,'%H:%i') AS `end`,
               m.status,
               (
                   SELECT CONCAT('[', GROUP_CONCAT(JSON_OBJECT('name', u.name, 'photo', u.photo )), ']')
                   FROM tb_user u WHERE JSON_CONTAINS(m.present, CONVERT (u.id, CHAR))
               ) AS  present,
               (
                   SELECT CONCAT('[', GROUP_CONCAT(JSON_OBJECT('name', u.name, 'photo', u.photo)), ']')
                   FROM tb_user u WHERE JSON_CONTAINS(m.unpresent, CONVERT (u.id, CHAR))
               ) AS  unpresent
        FROM  tb_meeting m
        WHERE m.id = #{id}
    </select>
    <select id="searchOnlineMeetingMembers" parameterType="hashmap" resultType="hashmap">
        SELECT u.id,
               u.name,
               u.photo,
               IF( u.id = #{userId}, 1, 0 ) AS mine
        FROM tb_meeting m
                 JOIN tb_user u ON JSON_CONTAINS (m.members, CAST( u.id AS CHAR ))
        WHERE m.id = #{meetingId} AND u.`status` = 1
        ORDER BY mine DESC
    </select>
    <select id="searchCanCheckinMeeting" parameterType="java.util.Map" resultType="long">
        SELECT COUNT(*)
        FROM tb_meeting
        WHERE
            id = #{meetingId} AND
            status IN(3, 4) AND
            NOW() BETWEEN DATE_SUB(CONCAT(date, ' ', start), INTERVAL 15 MINUTE) AND DATE_ADD(CONCAT(date, ' ', start), INTERVAL 5 MINUTE) AND
            JSON_CONTAINS(IFNULL(members, JSON_ARRAY()), CAST(#{userId} AS CHAR)) AND
            NOT JSON_CONTAINS(IFNULL(present, JSON_ARRAY()), CAST(#{userId} AS CHAR))
    </select>
    <update id="updateMeetingPresent" parameterType="java.util.Map">
        UPDATE tb_meeting
        SET present = JSON_ARRAY_APPEND(IFNULL(present, JSON_ARRAY()), '$', #{userId})
        WHERE
            id = #{meetingId} AND
            status IN(3, 4) AND
            NOW() BETWEEN DATE_SUB(CONCAT(date, ' ', start), INTERVAL 15 MINUTE) AND DATE_ADD(CONCAT(date, ' ', start), INTERVAL 5 MINUTE) AND
            JSON_CONTAINS(IFNULL(members, JSON_ARRAY()), CAST(#{userId} AS CHAR)) AND
            NOT JSON_CONTAINS(IFNULL(present, JSON_ARRAY()), CAST(#{userId} AS CHAR))
    </update>
    <update id="updateMeetingInstanceId" parameterType="hashmap">
        UPDATE tb_meeting SET instance_id = #{instanceId} WHERE uuid = #{uuid}
    </update>
    <insert id="insert" parameterType="com.example.emos.db.pojo.TbMeeting">
        INSERT INTO tb_meeting
        SET title = #{title},
        <if test="uuid!=null">
            uuid = #{uuid},
        </if>
        `date` = #{date},
        creator_id = #{creatorId},
        <if test="place != null">
            place = #{place},
        </if>
        `start` = #{start},
        `end` = #{end},
        `type` = #{type},
        members = #{members},
        `desc` = #{desc},
        <if test="instanceId != null">
            instance_id = #{instanceId},
        </if>
        `status` = #{status},
        create_time = NOW()
    </insert>
</mapper>
