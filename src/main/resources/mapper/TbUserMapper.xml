<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.emos.db.dao.TbUserMapper">

    <resultMap id="BaseResultMap" type="com.example.emos.db.pojo.TbUser">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="openId" column="open_id" jdbcType="VARCHAR"/>
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
            <result property="photo" column="photo" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="sex" column="sex" jdbcType="OTHER"/>
            <result property="tel" column="tel" jdbcType="CHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="hiredate" column="hiredate" jdbcType="DATE"/>
            <result property="role" column="role" jdbcType="OTHER"/>
            <result property="root" column="root" jdbcType="TINYINT"/>
            <result property="deptId" column="dept_id" jdbcType="OTHER"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,password,
        open_id,nickname,photo,
        name,sex,tel,
        email,hiredate,role,
        root,dept_id,status,
        create_time
    </sql>

    <select id="searchUserPermissions" parameterType="long" resultType="String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id=#{userId} AND u.status=1
    </select>
    <select id="login" parameterType="HashMap" resultType="int">
        SELECT id FROM tb_user
        WHERE username = #{username}
          AND password = HEX(AES_ENCRYPT(#{password}, #{username}))
          AND `status` = 1
        LIMIT 1
    </select>
    <select id="searchUserByPage" parameterType="HashMap" resultType="HashMap">
        SELECT
            DISTINCT u.id AS id,
            name,
            sex,
            u.tel AS tel,
            u.email AS email,
            hiredate,
            (SELECT GROUP_CONCAT(role_name) FROM tb_role WHERE JSON_CONTAINS(u.role, CONVERT(id, CHAR))) AS roles,
            dept_name AS dept,
            status,
            root
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CONVERT(r.id, CHAR))
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        <where>
            u.id != 1
            <if test="name != null">
                AND u.name LIKE "%${name}%"
            </if>
            <if test="sex != null">
                AND u.sex = #{sex}
            </if>
            <if test="role != null">
                AND r.role_name = #{role}
            </if>
            <if test="deptId != null">
                AND d.id = #{deptId}
            </if>
            <if test="status != null">
                AND u.status = #{status}
            </if>
            <if test="userId != null">
                AND u.dept_id = (SELECT dept_id FROM tb_user WHERE id = #{userId})
            </if>
        </where>
        ORDER BY u.id
        LIMIT #{start}, #{length}
    </select>
    <select id="searchUserCount" parameterType="HashMap" resultType="long">
        SELECT COUNT(DISTINCT u.id)
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS(u.role, CONVERT(r.id, CHAR))
        LEFT JOIN tb_dept d ON u.dept_id = d.id
        <where>
            u.id != 1
            <if test="name != null">
                AND u.name LIKE "%${name}%"
            </if>
            <if test="sex != null">
                AND u.sex = #{sex}
            </if>
            <if test="role != null">
                AND r.role_name = #{role}
            </if>
            <if test="deptId != null">
                AND d.id = #{deptId}
            </if>
            <if test="status != null">
                AND u.status = #{status}
            </if>
            <if test="userId != null">
                AND u.dept_id = (SELECT dept_id FROM tb_user WHERE id = #{userId})
            </if>
        </where>
    </select>
    <select id="searchById" parameterType="int" resultType="HashMap">
        SELECT
            username,
            AES_DECRYPT(UNHEX(password), username) AS password,
            nickname,
            name,
            sex,
            tel,
            email,
            hiredate,
            role,
            dept_id as deptId,
            status
        FROM tb_user WHERE id = #{userId}
    </select>
    <select id="searchUserInfo" parameterType="int" resultType="hashmap">
        SELECT
            u.open_id AS openId,
            u.nickname,
            u.name,
            u.photo,
            u.sex,
            u.tel,
            u.email,
            d.dept_name AS deptName,
            u.hiredate,
            u.status,
            (SELECT GROUP_CONCAT(role_name separator ',') FROM tb_role WHERE JSON_CONTAINS (u.role, CONVERT (id, CHAR))) AS roles
        FROM tb_user u
        LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId} AND u.status = 1
    </select>
    <select id="searchUserGroupByDept" parameterType="int" resultType="hashmap">
        SELECT
            d.id AS deptId,
            u.id AS userId,
            name,
            dept_name AS deptName
        FROM tb_user u JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.status = 1
        <if test="userId != null">
            AND u.id != #{userId}
        </if>
        ORDER BY d.id, u.id
    </select>
    <select id="searchGmId" resultType="int">
        SELECT u.id
        FROM tb_user u JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
        WHERE r.id = 2 AND u.status = 1 LIMIT 1
    </select>
    <select id="searchDeptManagerId" parameterType="int" resultType="int">
        SELECT id FROM tb_user
        WHERE JSON_CONTAINS(role, '3')
            AND status = 1
            AND dept_id = (SELECT dept_id FROM tb_user WHERE id = #{userId})
            AND `status` = 1
        ORDER BY create_time
        LIMIT 1
    </select>
    <select id="searchUserRoles" parameterType="int" resultType="string">
        SELECT role_name
        FROM tb_role r JOIN tb_user u ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR)) WHERE u.id = #{userId}
    </select>
    <select id="searchNameAndDept" parameterType="int" resultType="hashmap">
        SELECT u.name, d.dept_name AS dept
        FROM tb_user u LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId} AND u.status = 1
    </select>
    <update id="updatePassword" parameterType="HashMap">
        UPDATE tb_user
            SET password = HEX(AES_ENCRYPT(#{newPassword}, username))
        WHERE id = #{userId} AND password = HEX(AES_ENCRYPT(#{password}, username)) AND status = 1
    </update>
    <update id="update" parameterType="com.example.emos.db.pojo.TbUser">
        UPDATE tb_user
        <set>
            <if test="username != null and password != null">
                username = #{username},
                password = HEX(AES_ENCRYPT(#{password},#{username})),
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="tel != null">
                tel = #{tel},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="hiredate != null">
                hiredate = #{hiredate},
            </if>
            <if test="role != null">
                role = #{role},
            </if>
            <if test="root != null">
                root = #{root},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        WHERE id = #{id}
    </update>
    <insert id="insert" parameterType="com.example.emos.db.pojo.TbUser">
        INSERT INTO tb_user
        SET
        <if test="username!=null">
            username = #{username},
        </if>
        <if test="password!=null">
            password = HEX(AES_ENCRYPT(#{password},#{username})),
        </if>
        <if test="openId!=null">
            open_id = #{openId},
        </if>
        <if test="nickname!=null">
            nickname = #{nickname},
        </if>
        <if test="photo!=null">
            photo = #{photo},
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email=#{email},
        </if>
        <if test="hiredate!=null">
            hiredate = #{hiredate},
        </if>
            role = #{role},
        <if test="root!=null">
            root = #{root},
        </if>
        <if test="deptId!=null">
            dept_id = #{deptId},
        </if>
        status = #{status}
    </insert>
    <delete id="deleteUserByIds">
        DELETE FROM tb_user
        WHERE id IN
        <foreach collection="array" open="(" separator="," close=")" item="userId">
            #{userId}
        </foreach>
        AND root = 0
    </delete>
</mapper>
